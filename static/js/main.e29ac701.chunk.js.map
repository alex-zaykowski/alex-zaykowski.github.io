{"version":3,"sources":["index.js"],"names":["BoxLink","props","texture","useTexture","mesh","useRef","useState","hovered","setHover","useFrame","state","delta","current","rotation","y","ref","scale","onClick","event","window","open","link","onPointerOver","onPointerOut","args","map","ReactDOM","render","style","width","height","camera","fov","position","fallback","color","fontSize","innerWidth","maxWidth","lineHeight","letterSpacing","textAlign","font","anchorX","anchorY","document","getElementById"],"mappings":"qOAQA,SAASA,EAAQC,GACf,IAAMC,EAAUC,YAAW,GAAD,OAAIF,EAAMC,UAE9BE,EAAOC,mBAEb,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,oBAAS,GAArC,6BAIA,OAFAG,aAAS,SAACC,EAAOC,GAAR,OAAmBP,EAAKQ,QAAQC,SAASC,GAAK,OAGrD,iDACMb,GADN,IAEEc,IAAKX,EACLY,MAAOT,EAAU,IAAM,EACvBU,QAAS,SAACC,GAAD,OAAWC,OAAOC,KAAP,UAAenB,EAAMoB,MAAQ,WACjDC,cAAe,SAACJ,GAAD,OAAWV,GAAS,IACnCe,aAAc,SAACL,GAAD,OAAWV,GAAS,IANpC,UAQE,6BAAagB,KAAM,CAAC,EAAG,EAAG,KAC1B,sCAAsBC,IAAKvB,QAMjCwB,IAASC,OACP,sBAAKC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAAtC,UACA,cAAC,IAAD,CAAQC,OAAQ,CAAEC,IAAK,GAAIC,SAAU,CAAC,EAAG,EAAG,KAA5C,SACE,eAAC,WAAD,CAAUC,SAAU,KAApB,UACA,iCACA,4BAAYD,SAAU,CAAC,GAAI,GAAI,MAC/B,cAAC,IAAD,CACEE,MAAO,OACPC,SAAUjB,OAAOkB,WAAa,IAC9BC,SAAU,IACVC,WAAY,EACZC,cAAe,IACfC,UAAW,OACXC,KAAK,uEACLC,QAAQ,SACRC,QAAQ,SATV,4BAaA,cAAC5C,EAAD,CAASE,QAAQ,cAAcmB,KAAK,oCAAoCY,SAAU,EAAE,GAAI,EAAG,KAC3F,cAACjC,EAAD,CAASE,QAAQ,gBAAgBmB,KAAK,kDAAkDY,SAAU,CAAC,GAAI,EAAG,KAC1G,cAACjC,EAAD,CAASE,QAAQ,eAAemB,KAAK,wDAAwDY,SAAU,CAAC,GAAI,EAAG,UApBjH,OAwBAY,SAASC,eAAe,U","file":"static/js/main.e29ac701.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Suspense } from 'react'\nimport { useRef, useState} from 'react'\nimport { Canvas, useFrame} from '@react-three/fiber'\nimport { useTexture, Text} from '@react-three/drei'\n\nfunction BoxLink(props) {\n  const texture = useTexture(`${props.texture}`);\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (mesh.current.rotation.y += 0.01))\n  // Return view, these are regular three.js elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={hovered ? 1.5 : 1}\n      onClick={(event) => window.open(`${props.link}`, \"_blank\")}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}\n    >\n      <boxGeometry args={[2, 2, 2]} />\n      <meshStandardMaterial map={texture} />\n    </mesh>\n  )\n}\n\n\nReactDOM.render(\n  <div style={{ width: \"100vw\", height: \"100vh\" }}>\n  <Canvas camera={{ fov: 75, position: [0, 0, 20] }}>\n    <Suspense fallback={null}>\n    <ambientLight />\n    <pointLight position={[10, 10, 10]} />\n    <Text\n      color={'#FFF'}\n      fontSize={window.innerWidth / 200}\n      maxWidth={200}\n      lineHeight={1}\n      letterSpacing={0.02}\n      textAlign={'left'}\n      font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\n      anchorX=\"center\"\n      anchorY=\"bottom\"\n    >\n      Alex Zaykowski\n    </Text>\n    <BoxLink texture=\"gh-logo.png\" link=\"https://github.com/alex-zaykowski\" position={[-4, -2, 0]} />\n    <BoxLink texture=\"instagram.png\" link=\"https://www.instagram.com/alex.zaykowski/?hl=en\" position={[0, -2, 0]} />\n    <BoxLink texture=\"linkedin.png\" link=\"https://www.linkedin.com/in/alex-zaykowski-04388a163/\" position={[4, -2, 0]} />\n    </Suspense>\n  </Canvas>,\n  </div>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}