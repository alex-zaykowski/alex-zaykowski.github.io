{"version":3,"sources":["index.js"],"names":["BoxLink","props","texture","useTexture","link","mesh","useRef","useState","hovered","setHover","useSpring","position","scale","useFrame","state","delta","current","rotation","y","ref","onClick","event","window","open","onPointerOver","onPointerOut","args","roughness","map","ReactDOM","render","style","width","height","camera","fov","fallback","intensity","color","fontSize","innerWidth","maxWidth","lineHeight","letterSpacing","textAlign","font","anchorX","anchorY","document","getElementById"],"mappings":"6OASA,SAASA,EAAQC,GACf,IAAMC,EAAUC,YAAW,GAAD,OAAIF,EAAMC,UAC9BE,EAAOH,EAAMG,KAEbC,EAAOC,mBAEb,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,oBAAS,GAArC,6BAUA,OARAN,EAAQS,oBAAU,CAChBC,SAAUV,EAAMU,SAChBC,MAAOJ,EAAU,IAAM,IAIzBK,aAAS,SAACC,EAAOC,GAAR,OAAmBV,EAAKW,QAAQC,SAASC,GAAK,OAGrD,eAAC,IAAEb,KAAH,2BACMJ,GADN,IAEEkB,IAAKd,EACLO,MAAOX,EAAMW,MACbQ,QAAS,SAACC,GAAD,OAAWC,OAAOC,KAAP,UAAenB,GAAQ,WAC3CoB,cAAe,SAACH,GAAD,OAAWZ,GAAS,IACnCgB,aAAc,SAACJ,GAAD,OAAWZ,GAAS,IANpC,UAQE,6BAAaiB,KAAM,CAAC,EAAG,EAAG,KAC1B,sCAAsBC,UAAU,IAAIC,IAAK1B,QAK/C2B,IAASC,OACP,sBAAKC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAAtC,UACA,cAAC,IAAD,CAAQC,OAAQ,CAAEC,IAAK,GAAIxB,SAAU,CAAC,EAAG,EAAG,KAA5C,SACE,eAAC,WAAD,CAAUyB,SAAU,KAApB,UACA,8BAAcC,UAAU,QAExB,cAAC,IAAD,CACEC,MAAO,OACPC,SAAUjB,OAAOkB,WAAa,IAC9BC,SAAU,IACVC,WAAY,EACZC,cAAe,IACfC,UAAW,OACXC,KAAK,uEACLC,QAAQ,SACRC,QAAQ,SATV,6BAaA,cAAC/C,EAAD,CAASE,QAAQ,wBAAwBE,KAAK,oCAAoCO,SAAU,EAAE,GAAI,EAAG,KACrG,cAACX,EAAD,CAASE,QAAQ,2BAA2BE,KAAK,kDAAkDO,SAAU,CAAC,GAAI,EAAG,KACrH,cAACX,EAAD,CAASE,QAAQ,0BAA0BE,KAAK,wDAAwDO,SAAU,CAAC,GAAI,EAAG,UApB5H,OAwBAqC,SAASC,eAAe,U","file":"static/js/main.c9978cf3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Suspense } from 'react'\nimport { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { useTexture, Text } from '@react-three/drei'\nimport {useSpring, a } from '@react-spring/three'\n\nfunction BoxLink(props) {\n  const texture = useTexture(`${props.texture}`)\n  const link = props.link\n  // This reference will give us direct access to the mesh\n  const mesh = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n\n  props = useSpring({\n    position: props.position,\n    scale: hovered ? 1.5 : 1\n  }) \n  // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => (mesh.current.rotation.y += 0.01))\n  // Return view, these are regular three.js elements expressed in JSX\n  return (\n    <a.mesh \n      {...props}\n      ref={mesh}\n      scale={props.scale}\n      onClick={(event) => window.open(`${link}`, \"_blank\")}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}\n    >\n      <boxGeometry args={[2, 2, 2]} />\n      <meshStandardMaterial roughness=\"1\" map={texture}/>\n    </a.mesh>\n  )\n}\n\nReactDOM.render(\n  <div style={{ width: \"100vw\", height: \"96vh\" }}>\n  <Canvas camera={{ fov: 75, position: [0, 0, 20] }}>\n    <Suspense fallback={null}>\n    <ambientLight intensity=\"0.5\" />\n\n    <Text\n      color={'#FFF'}\n      fontSize={window.innerWidth / 200}\n      maxWidth={200}\n      lineHeight={1}\n      letterSpacing={0.02}\n      textAlign={'left'}\n      font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\n      anchorX=\"center\"\n      anchorY=\"bottom\"\n    >\n      Alex Zaykowski.\n    </Text>\n    <BoxLink texture=\"icons/github-icon.jpg\" link=\"https://github.com/alex-zaykowski\" position={[-4, -3, 0]} />\n    <BoxLink texture=\"icons/instagram-icon.jpg\" link=\"https://www.instagram.com/alex.zaykowski/?hl=en\" position={[0, -3, 0]} />\n    <BoxLink texture=\"icons/linkedin-icon.jpg\" link=\"https://www.linkedin.com/in/alex-zaykowski-04388a163/\" position={[4, -3, 0]} />\n    </Suspense>\n  </Canvas>,\n  </div>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}